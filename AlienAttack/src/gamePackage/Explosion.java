package gamePackage;

import java.util.ArrayList;
import javafx.animation.Transition;
import javafx.animation.TranslateTransition;
import javafx.scene.Scene;
import javafx.util.Duration;

//This entire file is part of my masterpiece.
//Bailey Wall

public class Explosion extends Shot {
    
  //the constructor for a shot generated by a cheat code 
    //or the explosion of a star
    public Explosion(double x, double y, int index, Scene scene, int indicator){
        super(x, y, scene);
        initializeExplosion(index, indicator);
    }
    
  //the shot made from an explosion also must calculate end points
    //takes which shot from the explosion this instance is, which
    //is what determines the end point the shot travels to, and which
    //kind of explosion it is a part of.
    public void initializeExplosion(int i, int indicator){

        TranslateTransition translate;

        translate = 
                new TranslateTransition(Duration.millis(Constants.EXPLOSION_RATE)); 

        //if the cheat code was called, send the shot straight up
        if(indicator == Constants.EARTH_EXPLOSION_INDICATOR){

            if(i == Constants.TOP_MIDDLE){
                translate.setToX((0 - getX()) + (getScene().getWidth()/2));
                translate.setToY(0 - getY());
            }
        }
        else if(indicator == Constants.STAR_EXPLOSION_INDICATOR){
            if(i == Constants.TOP_MIDDLE){
                translate.setToX(0);
                translate.setToY(0 - getY());
            }
        }

        if(i == Constants.TOP_LEFT_CORNER){
            translate.setToX(0 - getX());
            translate.setToY((0 - getY()));
        }
        else if(i == Constants.TOP_RIGHT_CORNER){
            translate.setToX(getScene().getWidth() - getX());
            translate.setToY(0 - getY());
        }
        else if(i == Constants.BOTTOM_RIGHT_CORNER){
            translate.setToX(getScene().getWidth() - getX());
            translate.setToY(getScene().getHeight() - getY());
        }
        else if(i == Constants.BOTTOM_LEFT_CORNER){
            translate.setToX(0 - getX());
            translate.setToY(getScene().getHeight() - getY());
        }
        else if(i == Constants.RIGHT_MIDDLE){
            translate.setToX(getScene().getWidth() - getX());
            translate.setToY((0 - getY()) + (getScene().getHeight()/2));
        }
        else if(i == Constants.BOTTOM_MIDDLE){
            translate.setToX((getScene().getWidth() - getX()) - (getScene().getWidth()/2));
            translate.setToY((getScene().getHeight() - getY()));
        }
        else if(i == Constants.LEFT_MIDDLE){
            translate.setToX(0 - getX());
            translate.setToY((0 - getY()) + (getScene().getHeight()/2));
        }

        ArrayList<Transition> animations = new ArrayList<Transition>();
        animations.add(translate);

        this.setAnimations(animations);
    }

}
